{"version":3,"sources":["main.js"],"names":["require","THREE","_interopRequireWildcard","dat","_gsap","_interopRequireDefault","_statsModule","_OrbitControls","_GLTFLoader","_DRACOLoader","_FontLoader","_TextGeometry","mixer","theme","bookCover","lightSwitch","titleText","subtitleText","isMobile","window","matchMedia","matches","canvas","document","querySelector","loaderWrapper","getElementById","clipNames","projects","image","url","x","y","projectsCameraPos","z","projectsCameraRot","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","defaultCamerRot","defaultCameraPos","position","set","WebGLRenderer","renderer","setSize","shadowMap","enabled","type","PCFSoftShadowMap","domElement","controls","enablePan","minDistance","maxDistance","OrbitControls","maxAzimuthAngle","Math","PI","maxPolarAngle","DRACOLoader","update","gltfLoader","GLTFLoader","setDRACOLoader","dracoLoader","style","display","video","createElement","src","muted","playsInline","autoplay","videoTexture","VideoTexture","minFilter","NearestFilter","magFilter","generateMipmaps","encoding","sRGBEncoding","room","children","forEach","child","castShadow","receiveShadow","innerChild","name","material","MeshBasicMaterial","play","MeshPhysicalMaterial","roughness","color","ior","transmission","opacity","depthWrite","depthTest","bookTexture","TextureLoader","load","flipY","map","add","animate","AnimationMixer","clip","animations","action","AnimationClip","findByName","clips","clipName","clipAction","projectsMenuListener","logoListener","console","init3DWorldClickListeners","ambientLight","roomLight","error","far","AmbientLight","bias","PointLight","fanLight1","radius","fanLight2","mapSize","width","fanLight3","height","fanLight4","fanLight5","pointLight1","pointLight2","pointLight3","pointLight4","clock","Clock","loadIntroText","requestAnimationFrame","FontLoader","getDelta","render","MeshPhongMaterial","font","size","textMaterials","titleGeo","rotation","TextGeometry","loader","flatShading","Mesh","subTitleGeo","switchTheme","classList","remove","gsap","themeType","r","body","g","to","intensity","b","distance","duration","disableOrbitControls","enableCloseBtn","disableCloseBtn","resetBookCover","length","project","i","mesh","resetProjects","scale","delay","resetCamera","_objectSpread","addEventListener","e","cameraToAbout","preventDefault","aboutCameraRot","delayedCall","rowIndex","floor","transparent","colIndex","geometry","projectPlane","userData","mousePosition","Vector2","raycaster","Raycaster","closeBtn","newTheme","projectsBtn","target","contains","clientX","setFromCamera","intersects","intersectObjects","intersect","object","open","initResponsive","roomScene","container","updateProjectionMatrix","aspect"],"mappings":"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","file":"main.min.js","sourcesContent":["import './style.css';\nimport * as THREE from 'three';\nimport * as dat from 'dat.gui';\nimport gsap from 'gsap';\nimport Stats from 'three/addons/libs/stats.module.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { FontLoader } from 'three/addons/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/addons/geometries/TextGeometry.js';\n\n// VARIABLES\nlet theme = 'light';\nlet bookCover = null;\nlet lightSwitch = null;\nlet titleText = null;\nlet subtitleText = null;\nlet mixer;\nlet isMobile = window.matchMedia('(max-width: 992px)').matches;\nlet canvas = document.querySelector('.experience-canvas');\nconst loaderWrapper = document.getElementById('loader-wrapper');\nlet clipNames = [\n  'fan_rotation',\n  'fan_rotation.001',\n  'fan_rotation.002',\n  'fan_rotation.003',\n  'fan_rotation.004',\n];\nlet projects = [\n  {\n    image: 'textures/project-spaze.webp',\n    url: 'https://www.spaze.social/',\n  },\n  {\n    image: 'textures/project-myteachers.jpg',\n    url: 'https://myteachers.com.au/',\n  },\n  {\n    image: 'textures/project-wholesale.jpg',\n    url: 'https://wholesale.com.np/',\n  },\n  {\n    image: 'textures/project-pelotero.jpg',\n    url: 'https://www.peloterosenlaweb.com/',\n  },\n];\nlet aboutCameraPos = {\n  x: 0.12,\n  y: 0.2,\n  z: 0.55,\n};\nlet aboutCameraRot = {\n  x: -1.54,\n  y: 0.13,\n  z: 1.41,\n};\nlet projectsCameraPos = {\n  x: 1,\n  y: 0.45,\n  z: 0.01,\n};\nlet projectsCameraRot = {\n  x: 0.05,\n  y: 0.05,\n  z: 0,\n};\n\n// SCENE & CAMERA\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.01,\n  1000\n);\nlet defaultCameraPos = {\n  x: 1.009028643133046,\n  y: 0.5463638814987481,\n  z: 0.4983449671971262,\n};\nlet defaultCamerRot = {\n  x: -0.8313297556598935,\n  y: 0.9383399492446749,\n  z: 0.7240714481613063,\n};\ncamera.position.set(defaultCameraPos.x, defaultCameraPos.y, defaultCameraPos.z);\n\n// RENDERER\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n  antialias: true,\n});\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n// STATS\n// const stats = new Stats();\n// document.querySelector('.experience').appendChild(stats.dom);\n\n// CONTROLS\nconst controls = new OrbitControls(camera, renderer.domElement);\n// controls.enableDamping = true;\ncontrols.enablePan = false;\ncontrols.minDistance = 0.9;\ncontrols.maxDistance = 1.6;\ncontrols.minAzimuthAngle = 0.2;\ncontrols.maxAzimuthAngle = Math.PI * 0.78;\ncontrols.minPolarAngle = 0.3;\ncontrols.maxPolarAngle = Math.PI / 2;\ncontrols.update();\n\n// LOAD MODEL & ASSET\n// const loadingManager = new THREE.LoadingManager();\nconst dracoLoader = new DRACOLoader();\ndracoLoader.setDecoderPath('draco/');\nconst gltfLoader = new GLTFLoader();\ngltfLoader.setDRACOLoader(dracoLoader);\ngltfLoader.load(\n  'models/room.glb',\n  function (room) {\n    // hide loader on loade\n    loaderWrapper.style.display = 'none';\n\n    // load video\n    const video = document.createElement('video');\n    video.src = 'textures/arcane.mp4';\n    video.muted = true;\n    video.playsInline = true;\n    video.autoplay = true;\n    video.loop = true;\n\n    // create video texture\n    const videoTexture = new THREE.VideoTexture(video);\n    videoTexture.minFilter = THREE.NearestFilter;\n    videoTexture.magFilter = THREE.NearestFilter;\n    videoTexture.generateMipmaps = false;\n    videoTexture.encoding = THREE.sRGBEncoding;\n\n    room.scene.children.forEach((child) => {\n      // disable shadow by wall\n      if (child.name !== 'Wall') {\n        child.castShadow = true;\n      }\n      child.receiveShadow = true;\n\n      if (child.children) {\n        child.children.forEach((innerChild) => {\n          // disable shadow by book cover & switch btn\n          if (innerChild.name !== 'Book001' && innerChild.name !== 'Switch') {\n            innerChild.castShadow = true;\n          }\n          innerChild.receiveShadow = true;\n        });\n      }\n\n      if (child.name === 'Stand') {\n        child.children[0].material = new THREE.MeshBasicMaterial({\n          map: videoTexture,\n        });\n        video.play();\n      }\n\n      // transparent texture for glass\n      if (child.name === 'CPU') {\n        child.children[0].material = new THREE.MeshPhysicalMaterial();\n        child.children[0].material.roughness = 0;\n        child.children[0].material.color.set(0x999999);\n        child.children[0].material.ior = 3;\n        child.children[0].material.transmission = 2;\n        child.children[0].material.opacity = 0.8;\n        child.children[0].material.depthWrite = false;\n        child.children[0].material.depthTest = false;\n        child.children[1].material = new THREE.MeshPhysicalMaterial();\n        child.children[1].material.roughness = 0;\n        child.children[1].material.color.set(0x999999);\n        child.children[1].material.ior = 3;\n        child.children[1].material.transmission = 1;\n        child.children[1].material.opacity = 0.8;\n        child.children[1].material.depthWrite = false;\n        child.children[1].material.depthTest = false;\n      }\n\n      if (child.name === 'Book') {\n        bookCover = child.children[0];\n\n        // adding texture to book\n        const bookTexture = new THREE.TextureLoader().load(\n          'textures/book-inner.png'\n        );\n        bookTexture.flipY = false;\n        child.material = new THREE.MeshStandardMaterial({\n          color: 0xfbfbfb,\n          map: bookTexture,\n        });\n      }\n\n      if (child.name === 'SwitchBoard') {\n        lightSwitch = child.children[0];\n      }\n    });\n\n    scene.add(room.scene);\n    animate();\n\n    // add animation\n    mixer = new THREE.AnimationMixer(room.scene);\n    const clips = room.animations;\n    clipNames.forEach((clipName) => {\n      const clip = THREE.AnimationClip.findByName(clips, clipName);\n      if (clip) {\n        const action = mixer.clipAction(clip);\n        action.play();\n      }\n    });\n\n    loadIntroText();\n\n    // add event listeners\n    logoListener();\n    aboutMenuListener();\n    projectsMenuListener();\n    init3DWorldClickListeners();\n    initResponsive(room.scene);\n  },\n  function (error) {\n    console.error(error);\n  }\n);\n\n// ADD LIGHT\nconst ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\nscene.add(ambientLight);\nconst roomLight = new THREE.PointLight(0xffffff, 2.5, 10);\nroomLight.position.set(0.3, 2, 0.5);\nroomLight.castShadow = true;\nroomLight.shadow.radius = 5;\nroomLight.shadow.mapSize.width = 2048;\nroomLight.shadow.mapSize.height = 2048;\nroomLight.shadow.camera.far = 2.5;\n// roomLight.shadow.camera.fov = 100;\nroomLight.shadow.bias = -0.002;\nscene.add(roomLight);\n// add light for pc fans\nconst fanLight1 = new THREE.PointLight(0xff0000, 30, 0.2);\nconst fanLight2 = new THREE.PointLight(0x00ff00, 30, 0.12);\nconst fanLight3 = new THREE.PointLight(0x00ff00, 30, 0.2);\nconst fanLight4 = new THREE.PointLight(0x00ff00, 30, 0.2);\nconst fanLight5 = new THREE.PointLight(0x00ff00, 30, 0.05);\nfanLight1.position.set(0, 0.29, -0.29);\nfanLight2.position.set(-0.15, 0.29, -0.29);\nfanLight3.position.set(0.21, 0.29, -0.29);\nfanLight4.position.set(0.21, 0.19, -0.29);\nfanLight5.position.set(0.21, 0.08, -0.29);\nscene.add(fanLight1);\nscene.add(fanLight2);\nscene.add(fanLight3);\nscene.add(fanLight4);\nscene.add(fanLight5);\n// add point light for text on wall\nconst pointLight1 = new THREE.PointLight(0xff0000, 0, 1.1);\nconst pointLight2 = new THREE.PointLight(0xff0000, 0, 1.1);\nconst pointLight3 = new THREE.PointLight(0xff0000, 0, 1.1);\nconst pointLight4 = new THREE.PointLight(0xff0000, 0, 1.1);\npointLight1.position.set(-0.2, 0.6, 0.24);\npointLight2.position.set(-0.2, 0.6, 0.42);\npointLight3.position.set(-0.2, 0.6, 0.01);\npointLight4.position.set(-0.2, 0.6, -0.14);\nscene.add(pointLight1);\nscene.add(pointLight2);\nscene.add(pointLight3);\nscene.add(pointLight4);\n\n// SETUP HELPERS\n// const axesHelper = new THREE.AxesHelper(5);\n// scene.add(axesHelper);\n// const gridHelper = new THREE.GridHelper(30, 30);\n// scene.add(gridHelper);\n// const shadowCameraHelper = new THREE.CameraHelper(roomLight.shadow.camera);\n// scene.add(shadowCameraHelper);\n// const pointLightHelper = new THREE.PointLightHelper(fanLight3, 0.03);\n// scene.add(pointLightHelper);\n\n// ADD GUI\n// const gui = new dat.GUI();\n// const options = {\n//   lightX: 0,\n//   lightY: 0.08,\n//   lightZ: 0,\n// };\n// gui.add(options, 'lightX').onChange((e) => {\n//   mobileLight.position.setX(e);\n// });\n// gui.add(options, 'lightY').onChange((e) => {\n//   mobileLight.position.setY(e);\n// });\n// gui.add(options, 'lightZ').onChange((e) => {\n//   mobileLight.position.setZ(e);\n// });\n\nconst clock = new THREE.Clock();\nfunction animate() {\n  requestAnimationFrame(animate);\n  // controls.update();\n  if (mixer) {\n    mixer.update(clock.getDelta());\n  }\n  renderer.render(scene, camera);\n  // stats.update();\n}\n\nfunction loadIntroText() {\n  const loader = new FontLoader();\n  loader.load('fonts/unione.json', function (font) {\n    const textMaterials = [\n      new THREE.MeshPhongMaterial({ color: 0x171f27, flatShading: true }),\n      new THREE.MeshPhongMaterial({ color: 0xffffff }),\n    ];\n    const titleGeo = new TextGeometry('KIOHOCCODE', {\n      font: font,\n      size: 0.08,\n      height: 0.01,\n    });\n    titleText = new THREE.Mesh(titleGeo, textMaterials);\n    titleText.rotation.y = Math.PI * 0.5;\n    titleText.position.set(-0.27, 0.55, 0.5);\n    scene.add(titleText);\n  });\n\n  loader.load('fonts/helvatica.json', function (font) {\n    const textMaterials = [\n      new THREE.MeshPhongMaterial({ color: 0x171f27, flatShading: true }),\n      new THREE.MeshPhongMaterial({ color: 0xffffff }),\n    ];\n    const subTitleGeo = new TextGeometry(\n      'Web Designer / Developer / Content Creator / Game Dev',\n      {\n        font: font,\n        size: 0.018,\n        height: 0,\n      }\n    );\n    subtitleText = new THREE.Mesh(subTitleGeo, textMaterials);\n    subtitleText.rotation.y = Math.PI * 0.5;\n    subtitleText.position.set(-0.255, 0.5, 0.5);\n    scene.add(subtitleText);\n  });\n}\n\nfunction switchTheme(themeType) {\n  if (themeType === 'dark') {\n    lightSwitch.rotation.z = Math.PI / 7;\n    document.body.classList.remove('light-theme');\n    document.body.classList.add('dark-theme');\n\n    // main lights\n    gsap.to(roomLight.color, {\n      r: 0.27254901960784313,\n      g: 0.23137254901960785,\n      b: 0.6862745098039216,\n    });\n    gsap.to(ambientLight.color, {\n      r: 0.17254901960784313,\n      g: 0.23137254901960785,\n      b: 0.6862745098039216,\n    });\n    gsap.to(roomLight, {\n      intensity: 1.5,\n    });\n    gsap.to(ambientLight, {\n      intensity: 0.3,\n    });\n\n    // fan lights\n    gsap.to(fanLight5, {\n      distance: 0.07,\n    });\n\n    // text color\n    gsap.to(titleText.material[0].color, {\n      r: 8,\n      g: 8,\n      b: 8,\n      duration: 0,\n    });\n    gsap.to(titleText.material[1].color, {\n      r: 5,\n      g: 5,\n      b: 5,\n      duration: 0,\n    });\n    gsap.to(subtitleText.material[0].color, {\n      r: 8,\n      g: 8,\n      b: 8,\n      duration: 0,\n    });\n    gsap.to(subtitleText.material[1].color, {\n      r: 5,\n      g: 5,\n      b: 5,\n      duration: 0,\n    });\n\n    // text light\n    gsap.to(pointLight1, {\n      intensity: 0.6,\n    });\n    gsap.to(pointLight2, {\n      intensity: 0.6,\n    });\n    gsap.to(pointLight3, {\n      intensity: 0.6,\n    });\n    gsap.to(pointLight4, {\n      intensity: 0.6,\n    });\n  } else {\n    lightSwitch.rotation.z = 0;\n    document.body.classList.remove('dark-theme');\n    document.body.classList.add('light-theme');\n\n    // main light\n    gsap.to(roomLight.color, {\n      r: 1,\n      g: 1,\n      b: 1,\n    });\n    gsap.to(ambientLight.color, {\n      r: 1,\n      g: 1,\n      b: 1,\n    });\n    gsap.to(roomLight, {\n      intensity: 2.5,\n    });\n    gsap.to(ambientLight, {\n      intensity: 0.6,\n    });\n\n    // fan light\n    gsap.to(fanLight5, {\n      distance: 0.05,\n    });\n\n    // text color\n    gsap.to(titleText.material[0].color, {\n      r: 0.09019607843137255,\n      g: 0.12156862745098039,\n      b: 0.15294117647058825,\n      duration: 0,\n    });\n    gsap.to(titleText.material[1].color, {\n      r: 1,\n      g: 1,\n      b: 1,\n      duration: 0,\n    });\n    gsap.to(subtitleText.material[0].color, {\n      r: 0.09019607843137255,\n      g: 0.12156862745098039,\n      b: 0.15294117647058825,\n      duration: 0,\n    });\n    gsap.to(subtitleText.material[1].color, {\n      r: 1,\n      g: 1,\n      b: 1,\n      duration: 0,\n    });\n\n    // text light\n    gsap.to(pointLight1, {\n      intensity: 0,\n    });\n    gsap.to(pointLight2, {\n      intensity: 0,\n    });\n    gsap.to(pointLight3, {\n      intensity: 0,\n    });\n    gsap.to(pointLight4, {\n      intensity: 0,\n    });\n  }\n}\n\nfunction enableOrbitControls() {\n  controls.enabled = true;\n}\n\nfunction disableOrbitControls() {\n  controls.enabled = false;\n}\n\nfunction enableCloseBtn() {\n  document.getElementById('close-btn').style.display = 'block';\n}\n\nfunction disableCloseBtn() {\n  document.getElementById('close-btn').style.display = 'none';\n}\n\nfunction resetBookCover() {\n  if (!bookCover) return;\n\n  gsap.to(bookCover.rotation, {\n    x: 0,\n    duration: 1.5,\n  });\n}\n\nfunction resetProjects() {\n  if (projects.length === 0) return;\n\n  projects.forEach((project, i) => {\n    gsap.to(project.mesh.material, {\n      opacity: 0,\n      duration: 1,\n    });\n    gsap.to(project.mesh.position, {\n      y: project.y,\n      duration: 1,\n    });\n    gsap.to(project.mesh.scale, {\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 0,\n      delay: 1,\n    });\n  });\n}\n\nfunction resetCamera() {\n  resetBookCover();\n  resetProjects();\n  disableCloseBtn();\n  gsap.to(camera.position, {\n    ...defaultCameraPos,\n    duration: 1.5,\n  });\n  gsap.to(camera.rotation, {\n    ...defaultCamerRot,\n    duration: 1.5,\n  });\n  gsap.delayedCall(1.5, enableOrbitControls);\n\n  // reset dimmed light for about display\n  if (theme !== 'dark') {\n    gsap.to(roomLight, {\n      intensity: 2.5,\n      duration: 1.5,\n    });\n  }\n}\n\nfunction logoListener() {\n  document.getElementById('logo').addEventListener('click', function (e) {\n    e.preventDefault();\n    resetCamera();\n  });\n}\n\nfunction cameraToAbout() {\n  if (!bookCover) return;\n\n  gsap.to(camera.position, {\n    ...aboutCameraPos,\n    duration: 1.5,\n  });\n  gsap.to(camera.rotation, {\n    ...aboutCameraRot,\n    duration: 1.5,\n  });\n  gsap.to(bookCover.rotation, {\n    x: Math.PI,\n    duration: 1.5,\n    delay: 1.5,\n  });\n\n  // prevent about text clutter due to bright light\n  if (theme !== 'dark') {\n    gsap.to(roomLight, {\n      intensity: 1,\n      duration: 1.5,\n    });\n  }\n}\n\nfunction aboutMenuListener() {\n  document.getElementById('about-menu').addEventListener('click', function (e) {\n    e.preventDefault();\n    disableOrbitControls();\n    resetProjects();\n    cameraToAbout();\n    gsap.delayedCall(1.5, enableCloseBtn);\n  });\n}\n\nfunction projectsMenuListener() {\n  // create project planes with textures\n  projects.forEach((project, i) => {\n    const colIndex = i % 3 === 0 ? 0 : 1;\n    const rowIndex = Math.floor(i / 3);\n    const geometry = new THREE.PlaneGeometry(0.71, 0.4);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      map: new THREE.TextureLoader().load(project.image),\n      transparent: true,\n      opacity: 0.0,\n    });\n    const projectPlane = new THREE.Mesh(geometry, material);\n    projectPlane.name = 'project';\n    projectPlane.userData = {\n      url: project.url,\n    };\n    projectPlane.position.set(\n      0.3 + i * 0.8 * colIndex,\n      1 - rowIndex * 0.5,\n      -1.15\n    );\n    projectPlane.scale.set(0, 0, 0);\n    // mesh & y vars needed for animation\n    projects[i].mesh = projectPlane;\n    projects[i].y = 1 - rowIndex * 0.5;\n    scene.add(projectPlane);\n  });\n\n  document\n    .getElementById('projects-menu')\n    .addEventListener('click', function (e) {\n      e.preventDefault();\n      disableOrbitControls();\n      resetBookCover();\n      gsap.to(camera.position, {\n        ...projectsCameraPos,\n        duration: 1.5,\n      });\n      gsap.to(camera.rotation, {\n        ...projectsCameraRot,\n        duration: 1.5,\n      });\n      gsap.delayedCall(1.5, enableCloseBtn);\n\n      // animate & show project items\n      projects.forEach((project, i) => {\n        project.mesh.scale.set(1, 1, 1);\n        gsap.to(project.mesh.material, {\n          opacity: 1,\n          duration: 1.5,\n          delay: 1.5 + i * 0.1,\n        });\n        gsap.to(project.mesh.position, {\n          y: project.y + 0.05,\n          duration: 1,\n          delay: 1.5 + i * 0.1,\n        });\n      });\n    });\n}\n\nfunction init3DWorldClickListeners() {\n  const mousePosition = new THREE.Vector2();\n  const raycaster = new THREE.Raycaster();\n  let intersects;\n\n  window.addEventListener('click', function (e) {\n    // store value set to prevent multi time update in foreach loop\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n\n    // prevent about focus on button click which are positioned above book in mobile view\n    const closeBtn = document.getElementById('close-btn');\n    const projectsBtn = document.getElementById('projects-menu');\n    if (\n      e.target === closeBtn ||\n      closeBtn.contains(e.target) ||\n      e.target === projectsBtn ||\n      projectsBtn.contains(e.target)\n    ) {\n      return false;\n    }\n\n    mousePosition.x = (e.clientX / window.innerWidth) * 2 - 1;\n    mousePosition.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    raycaster.setFromCamera(mousePosition, camera);\n    intersects = raycaster.intersectObjects(scene.children);\n    intersects.forEach((intersect) => {\n      if (intersect.object.name === 'project') {\n        intersect.object.userData.url &&\n          window.open(intersect.object.userData.url);\n      }\n\n      if (\n        intersect.object.name === 'Book' ||\n        intersect.object.name === 'Book001'\n      ) {\n        disableOrbitControls();\n        cameraToAbout();\n        gsap.delayedCall(1.5, enableCloseBtn);\n      }\n\n      if (\n        intersect.object.name === 'SwitchBoard' ||\n        intersect.object.name === 'Switch'\n      ) {\n        theme = newTheme;\n        switchTheme(theme);\n      }\n    });\n  });\n}\n\n// RESPONSIVE\nfunction initResponsive(roomScene) {\n  if (isMobile) {\n    roomScene.scale.set(0.95, 0.95, 0.95);\n    aboutCameraPos = {\n      x: 0.09,\n      y: 0.23,\n      z: 0.51,\n    };\n    aboutCameraRot = {\n      x: -1.57,\n      y: 0,\n      z: 1.57,\n    };\n\n    // rect light\n    // rectLight.width = 0.406;\n    // rectLight.height = 0.3;\n    // rectLight.position.z = -0.34;\n\n    // project\n    projectsCameraPos = {\n      x: 1.1,\n      y: 0.82,\n      z: 0.5,\n    };\n    projectsCameraRot = {\n      x: 0,\n      y: 0,\n      z: 1.55,\n    };\n    projects.forEach((project, i) => {\n      project.mesh.position.z = -1.13;\n    });\n\n    controls.maxDistance = 1.5;\n    controls.maxAzimuthAngle = Math.PI * 0.75;\n  }\n}\n\n// close button\ndocument.getElementById('close-btn').addEventListener('click', (e) => {\n  e.preventDefault();\n  resetCamera();\n});\n\n// contact menu\ndocument.getElementById('contact-btn').addEventListener('click', (e) => {\n  e.preventDefault();\n  document\n    .querySelector('.contact-menu__dropdown')\n    .classList.toggle('contact-menu__dropdown--open');\n});\n\ndocument.addEventListener('mouseup', (e) => {\n  const container = document.querySelector('.contact-menu');\n  if (!container.contains(e.target)) {\n    container\n      .querySelector('.contact-menu__dropdown')\n      .classList.remove('contact-menu__dropdown--open');\n  }\n});\n\n// update camera, renderer on resize\nwindow.addEventListener('resize', () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n});\n"]}